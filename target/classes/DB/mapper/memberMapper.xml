<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.iu.s5.member.MemberDAO">

	<resultMap type="MemberVO" id="loginResult">
	
		<id column="id" property="id"/> <!-- primary key -->
		<result column="pw" property="pw"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="age" property="age"/>
		
		<!-- 객체가 1개인 경우 1:1-->
		<association property="memberFileVO" javaType="MemberFileVO">
			<result column="fileName" property="fileName"/>
			<result column="oriName" property="oriName"/>
		</association> <!-- association이 memberVO가 되는것 -->
		
	</resultMap> <!-- mPw라는 컬럼명이 나오면 MemberVO의 pw에 넣는다. / primary key로 꺼내는건 id, 나머지는 다 result -->

<sql id="search">
	like '%'||#{search}||'%'
</sql>

<sql id="kind">
		<choose>
			<when test="kind=='mi'">
				id
			</when>
			<when test="kind=='mn'">
				name
			</when>
			<when test="kind=='me'">
				email
			</when>
			<otherwise>
				phone
			</otherwise>
		</choose>
	</sql>

<!-- 검색 -->
	<select id="memberCount" parameterType="Pager" resultType="Long"><!-- 단축키(mybatisConfig): 마이바티스에경우에만 해당, java쪽은 상관 x -->
			select count(id) from member where 
			<include refid="kind"></include>
			<include refid="search"></include>
	</select>

<!-- MemberVO를 쓰려고 하니까 filename,oriname이 안들어있음 / MemberVO와 MemberFileVO를 연계시키기 - 상속? -->
	<select id="memberList" parameterType="Pager" resultType="MemberVO">
		select * from
		(select M.*, rownum R from
		(select * from member where 
		<include refid="kind"></include>
		<include refid="search"></include>) M)
		where R between #{startRow} and #{lastRow}
	</select>

	<select id="memberLogin" parameterType="MemberVO" resultMap="loginResult">
		SELECT M.*,F.fileName, F.oriName
		FROM MEMBER M LEFT JOIN MEMBERFILE F
		ON (M.id = F.id)
		WHERE M.id = #{id} AND M.pw=#{pw}
	</select>
	
	
	<insert id="memberJoin" parameterType="MemberVO">
		INSERT INTO MEMBER VALUES (#{id},#{pw},#{name},22,#{phone},#{email})
	</insert>
	
	<delete id="memberDelete" parameterType="MemberVO">
		delete member where id=#{id}
	</delete>
	
	<update id="memberUpdate" parameterType="MemberVO">
		update member set name=#{name},age=#{age},phone=#{phone},email=#{email} where id=#{id}
	</update>
	
	</mapper>